<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Escher</title>
  
  
  <link href="http://liujun1997.github.io/atom.xml" rel="self"/>
  
  <link href="http://liujun1997.github.io/"/>
  <updated>2021-08-06T16:24:19.253Z</updated>
  <id>http://liujun1997.github.io/</id>
  
  <author>
    <name>Escher</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cdh安装部署</title>
    <link href="http://liujun1997.github.io/2021/08/06/cdh%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>http://liujun1997.github.io/2021/08/06/cdh%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</id>
    <published>2021-08-06T15:27:54.000Z</published>
    <updated>2021-08-06T16:24:19.253Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CDH6-3-2-安装"><a href="#CDH6-3-2-安装" class="headerlink" title="CDH6.3.2 安装"></a>CDH6.3.2 安装</h1><p>[toc]</p><h2 id="1-安装说明"><a href="#1-安装说明" class="headerlink" title="1.安装说明"></a>1.安装说明</h2><p>1.安全前置准备，包括安装操作系统、关闭防火墙、同步服务器时钟等</p><p>2.外部数据库如MySQL安装</p><p>3.安装Cloudera Manager</p><p>4.安装CDH集群</p><p><strong>请务必注意CDH6的安装前置条件包括如下：</strong></p><p><strong>外部数据库支持：</strong></p><p>MySQL 5.7或更高</p><p>MariaDB 5.5或更高</p><p>PostgreSQL 8.4或更高</p><p>Oracle 12c或更高</p><p><strong>java环境：</strong></p><p>Oracle JDK1.8，将不再支持JDK1.7</p><p><strong>操作系统支持</strong></p><p>RHEL 6.8或更高</p><p>RHEL 7.2或更高</p><p>SLES 12 SP2或更高</p><p>Ubuntu 16或更高</p><h2 id="2-集成环境"><a href="#2-集成环境" class="headerlink" title="2.集成环境"></a>2.集成环境</h2><h3 id="2-1操作脚本"><a href="#2-1操作脚本" class="headerlink" title="2.1操作脚本"></a>2.1操作脚本</h3><ul><li><strong>创建shell目录</strong></li></ul><p>mkdir  -p /opt/shell/</p><ul><li><strong>创建node.list文件</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch node.list</span><br></pre></td></tr></table></figure><p>添加如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">master01.health.bigdata.com</span><br><span class="line">master02.health.bigdata.com</span><br><span class="line">slave01.health.bigdata.com</span><br><span class="line">slave02.health.bigdata.com</span><br><span class="line">slave03.health.bigdata.com</span><br><span class="line">slave04.health.bigdata.com</span><br></pre></td></tr></table></figure><ul><li><strong>创建ssh_no_passwd.sh文件</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch ssh_no_passwd.sh</span><br></pre></td></tr></table></figure><p>添加内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">ips_name=$1</span><br><span class="line"><span class="meta">#</span><span class="bash">获取当前目录的绝对路径</span></span><br><span class="line">path_dir=`pwd`</span><br><span class="line"><span class="meta">#</span><span class="bash">找到ips文件的位置,并查看里面的内容 赋给ips_arr</span></span><br><span class="line">remote_hosts=`cat $&#123;path_dir&#125;/$&#123;ips_name&#125;`</span><br><span class="line"></span><br><span class="line">if [ -f &quot;/root/.ssh/id_rsa.pub&quot; ]|| [ -f &quot;/root/.ssh/id_rsa&quot;];then</span><br><span class="line">    echo &quot;文件已经存在&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;文件不存在准备创建&quot;</span><br><span class="line">    echo &quot;准备创建公钥文件&quot;</span><br><span class="line">    ssh-keygen -t rsa -q -f &quot;/root/.ssh/id_rsa&quot; -P &#x27;&#x27;</span><br><span class="line">fi</span><br><span class="line">echo &quot;公钥创建完成&quot;</span><br><span class="line">echo &quot;传送至远端主机&quot;</span><br><span class="line">echo &quot;一共有$#台主机需要配置&quot;</span><br><span class="line">if [ ! -z $# ];then</span><br><span class="line">    for host in $remote_hosts</span><br><span class="line">        do</span><br><span class="line">        ssh-copy-id -i /root/.ssh/id_rsa.pub $host</span><br><span class="line">    done</span><br><span class="line">else</span><br><span class="line">    echo &quot;请至少输入一台服务器地址&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><ul><li><strong>创建ssh_do_all.sh文件</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch ssh_do_all.sh</span><br></pre></td></tr></table></figure><p>添加内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">! /bin/bash</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">拿到外面传进来的命令</span></span><br><span class="line">ips_name=$1</span><br><span class="line">cmd=&quot;&quot;</span><br><span class="line">for((i=2;i&lt;=$#;i++)); do </span><br><span class="line">    j=$&#123;!i&#125;</span><br><span class="line">    cmd=&quot;$&#123;cmd&#125; $j &quot;</span><br><span class="line">done</span><br><span class="line">echo &quot;&#x27;$&#123;cmd&#125;&#x27;&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">进入到当前脚本所在的路径</span></span><br><span class="line">cd `dirname $0`</span><br><span class="line"><span class="meta">#</span><span class="bash">获取当前目录的绝对路径</span></span><br><span class="line">path_dir=`pwd`</span><br><span class="line"><span class="meta">#</span><span class="bash">找到ips文件的位置,并查看里面的内容 赋给ips_arr</span></span><br><span class="line">ips_arr=`cat $&#123;path_dir&#125;/$&#123;ips_name&#125;`</span><br><span class="line"></span><br><span class="line">for ip in $&#123;ips_arr[*]&#125;</span><br><span class="line">do</span><br><span class="line">        #拼接ssh命令:ssh用户名@主机名 命令</span><br><span class="line">        cmd_=&quot;ssh $ip &#x27;$cmd&#x27;&quot;</span><br><span class="line">        echo $cmd_</span><br><span class="line">        #通过eval 实现动态执行命令</span><br><span class="line">        if eval $cmd_; then</span><br><span class="line">                echo &#x27;ok&#x27;</span><br><span class="line">        else</span><br><span class="line">                echo &#x27;fail&#x27;</span><br><span class="line">        fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>执行命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ssh_do_all.sh node.list df -h</span><br></pre></td></tr></table></figure><ul><li><strong>创建scp_do_all.sh文件</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch scp_do_all.sh</span><br></pre></td></tr></table></figure><p>添加内容如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">! /bin/bash<span class="comment">#脚本使用说明# ./scp_do_all.sh f1 /home/luser/dirips_name=$1#你要传的文件source_=$2#目标目录target=$3#先进入当前脚本的所在路径cd `dirname $0`#获取当前目录的绝对路径path_dir=`pwd`#找到ips文件的位置，并查看里面的内容 赋给 ips_arrips_arr=(`cat $&#123;path_dir&#125;/$&#123;ips_name&#125;`)for ip in $&#123;ips_arr[*]&#125;do        #拼接scp 命令： scp 你要传的文件 用户名@主机名:目标目录         cmd_=&quot;scp $source_ $ip:$target&quot;        echo $cmd_        #通过eval 实现动态执行命令        if eval $cmd_ ; then                echo &#x27;ok&#x27;        else                echo &#x27;fail&#x27;        fidone</span></span></span><br></pre></td></tr></table></figure><p>执行命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh scp_do_all.sh node.list /etc/hosts /etc/</span><br></pre></td></tr></table></figure><h3 id="2-2hostname修改"><a href="#2-2hostname修改" class="headerlink" title="2.2hostname修改"></a>2.2hostname修改</h3><p>各节点的hostname配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hostname#hostnameip-172-31-13-38.ap-southeast-1.compute.internal</span><br></pre></td></tr></table></figure><p>或者你可以通过命令修改立即生效</p><p>hostnamectl set-hostname ip-172-31-13-38.ap-southeast-1.compute.internal</p><h3 id="2-3hosts配置"><a href="#2-3hosts配置" class="headerlink" title="2.3hosts配置"></a>2.3hosts配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@gxwj-zhongjj-8 ~]# cat /etc/hosts127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain619.50.65.66 master01.health.bigdata.com19.50.65.67 master02.health.bigdata.com19.50.65.68 slave01.health.bigdata.com19.50.65.71 slave02.health.bigdata.com19.50.65.75 slave03.health.bigdata.com19.50.65.76 slave04.health.bigdata.com</span><br></pre></td></tr></table></figure><ul><li>将文件复制的集群的各个节点</li></ul><h3 id="2-4SSH免登陆"><a href="#2-4SSH免登陆" class="headerlink" title="2.4SSH免登陆"></a>2.4SSH免登陆</h3><ul><li><p>在主节点执行sh脚本</p></li><li><p>执行命令</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh ssh_no_passwd.sh node.list</span><br></pre></td></tr></table></figure><h3 id="2-5配置iso镜像源"><a href="#2-5配置iso镜像源" class="headerlink" title="2.5配置iso镜像源"></a>2.5配置iso镜像源</h3><p><strong>创建iso目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/iso</span><br></pre></td></tr></table></figure><p><strong>创建http目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/www/html/iso</span><br></pre></td></tr></table></figure><p><strong>将ISO镜像文件移到/opt/iso目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp CentOS-7-x86_64-DVD-1908.iso /opt/iso</span><br></pre></td></tr></table></figure><p><strong>临时挂载，重启无效</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -o loop /opt/iso/CentOS-7-x86_64-DVD-1908.iso /var/www/html/iso</span><br></pre></td></tr></table></figure><p>通过 df -h命令查看</p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-14-155860.jpg" alt="img"> </p><p><strong>永久挂载操作系统iso文件</strong></p><p>注意格式，容易出错，内容tab键隔开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/fstab</span><br></pre></td></tr></table></figure><p>最末端添加内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/iso/CentOS-7-x86_64-DVD-1908.iso /var/www/html/iso/ iso9660 defaults,ro,loop    0    0</span><br></pre></td></tr></table></figure><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-14-155859.jpg" alt="img"></p><p> 执行重新加载命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -a </span><br></pre></td></tr></table></figure><p>内容格式不对，会出错，如下：</p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-14-155857.jpg" alt="img"></p><p>显示/etc/fstab的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount</span><br></pre></td></tr></table></figure><p>查看是否挂载成功</p><p>注意：如果不成功，需要修改配置内容与格式，否则系统重启无法进入用户会话</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-14-155901.jpg" alt="img"> </p><p><strong>配置操作系统repo</strong></p><p>创建os.repo文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/yum.repos.d/os.repo</span><br></pre></td></tr></table></figure><p>本地os.repo配置内容 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[local_iso]name=CentOS-$releasever - Mediabaseurl=file:///var///www///html///isogpgcheck=0enabled=1</span><br></pre></td></tr></table></figure><p>同时按照httpd服务</p><p>yum install httpd</p><p>其他服务器节点os.repo配置内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">[osrepo]#</span><span class="bash">自定义名称name=os_repo<span class="comment">#yum访问路径baseurl=http://19.50.65.66/iso/#启用yum源，0为不启用，1为启用enabled=1#检查GPG-KEY，0为不检查，1为检查gpgcheck=0</span></span> </span><br></pre></td></tr></table></figure><p>删除所有默认的repo所有节点都是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/yum.repo.d/</span><br></pre></td></tr></table></figure><p>查看当前可用的源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum repolist</span><br></pre></td></tr></table></figure><p>清除缓存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><h3 id="2-6集群时钟同步"><a href="#2-6集群时钟同步" class="headerlink" title="2.6集群时钟同步"></a>2.6集群时钟同步</h3><p>参考网上ntp安装教程</p><p>批量添加定时同步时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi  ntpCrontab.sh</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/baships_name=<span class="variable">$1</span><span class="comment">#获取当前目录的绝对路径path_dir=`pwd`#找到ips文件的位置,并查看里面的内容 赋给ips_arrremote_hosts=`cat $&#123;path_dir&#125;/$&#123;ips_name&#125;`for i in cat $remote_hostsdo  echo $i  ssh $i &quot;(echo &#x27;0 */10 * * * /usr/sbin/ntpdate -u 19.50.65.66&#x27; ;crontab -l) |crontab&quot;  echo &quot;Synchronization is complete.&quot;done</span></span></span><br></pre></td></tr></table></figure><p>或者(推荐)</p><p>ntpdate.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env bashcd /opt/shellsh ssh_do_all.sh ipa.list ntpdate -u cdhclient</span></span><br></pre></td></tr></table></figure><p>sudo vi /etc/crontab</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHELL=/bin/bashPATH=/sbin:/bin:/usr/sbin:/usr/binMAILTO=root<span class="comment"># For details see man 4 crontabs# Example of job definition:# .---------------- minute (0 - 59)# |  .------------- hour (0 - 23)# |  |  .---------- day of month (1 - 31)# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat# |  |  |  |  |# *  *  *  *  * user-name  command to be executed#添加内容*/5 * * * * root /opt/shell/ntpdate.sh &gt;&gt; /opt/shell/ntpdate.log</span></span><br></pre></td></tr></table></figure><p>重启cron定时服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status crond</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart crond</span><br></pre></td></tr></table></figure><h3 id="2-7ansible安装"><a href="#2-7ansible安装" class="headerlink" title="2.7ansible安装"></a>2.7ansible安装</h3><p><strong>安装依赖</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ansible</span><br></pre></td></tr></table></figure><p><strong>配置/etc/ansible/hosts</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#补充内容# This is the default ansible &#x27;hosts&#x27; file.## It should live in /etc/ansible/hosts##   - Comments begin with the &#x27;#&#x27; character#   - Blank lines are ignored#   - Groups of hosts are delimited by [header] elements#   - You can enter hostnames or ip addresses#   - A hostname/ip can be a member of multiple groups# Ex 1: Ungrouped hosts, specify before any group headers.## green.example.com## blue.example.com## 192.168.100.1## 192.168.100.10# Ex 2: A collection of hosts belonging to the &#x27;webservers&#x27; group## [webservers]## alpha.example.org## beta.example.org## 192.168.1.100## 192.168.1.110# If you have multiple hosts following a pattern you can specify# them like this:## www[001:006].example.com# Ex 3: A collection of database servers in the &#x27;dbservers&#x27; group## [dbservers]#### db01.intranet.mydomain.net## db02.intranet.mydomain.net## 10.25.1.56## 10.25.1.57# Here&#x27;s another example of host ranges, this time there are no# leading 0s:## db-[99:101]-node.example.com[all]cdhmaster1.chiefdata.netcdhnode1.chiefdata.netcdhnode2.chiefdata.netcdhnode3.chiefdata.netcdhnode4.chiefdata.netcdhclient.chiefdata.net[ntp]cdhmaster1.chiefdata.netcdhnode1.chiefdata.netcdhnode2.chiefdata.netcdhnode3.chiefdata.netcdhnode4.chiefdata.net[ipa]cdhmaster1.chiefdata.netcdhnode1.chiefdata.netcdhnode2.chiefdata.netcdhnode3.chiefdata.netcdhnode4.chiefdata.net</span></span></span><br></pre></td></tr></table></figure><p><strong>执行批量操作命令</strong></p><p>批量执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m command -a &quot;df -h&quot; </span><br></pre></td></tr></table></figure><p>all 是分组命令</p><p>批量执行shell文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m script -a ./check_env.sh</span><br></pre></td></tr></table></figure><h3 id="2-7初始化配置"><a href="#2-7初始化配置" class="headerlink" title="2.7初始化配置"></a>2.7初始化配置</h3><p><strong>创建check_env.sh文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch  check_env.sh</span><br></pre></td></tr></table></figure><p><strong>增加文件内容：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi check_env.sh</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash<span class="comment"># 系统时间datetime=`date &quot;+%Y%m%d%H%M%S&quot;`# 关闭 firewalldsystemctl stop firewalldsystemctl disable firewalld#关闭 selinuxcp /etc/selinux/config /tmp/selinux_config.&quot;$datetime&quot;setenforce 0SELINUX=`grep &#x27;SELINUX=&#x27; /etc/selinux/config|grep -v &quot;^#&quot;|awk -F&quot;=&quot; &#x27;&#123;print $2&#125;&#x27;`if [ &quot;$SELINUX&quot; == &quot;enforcing&quot; ];then  sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27; /etc/selinux/configelif [ &quot;$SELINUX&quot; == &quot;permissive&quot; ];then  sed -i &#x27;s/SELINUX=permissive/SELINUX=disabled/g&#x27; /etc/selinux/configelse  echo &quot;have already been disabled,Don&#x27;t need to modify&quot;fi# 关闭 tunedtuned-adm offtuned=`systemctl status tuned|grep &#x27;Active: active (running)&#x27;|wc -l`if [ $tuned == 1 ];then  systemctl stop tuned  echo &#x27;tuned stop successful&#x27;else  echo &#x27;tuned already stopped&#x27;fisystemctl disable tuned# 设置 vm.swappinesscp /etc/sysctl.conf /tmp/etc_sysctl.&quot;$datetime&quot;sysctl -w vm.swappiness=1swappiness=`grep &quot;vm.swappiness=&quot; /etc/sysctl.conf|awk -F &quot;=&quot; &#x27;&#123;print $2&#125;&#x27;`if [ &quot;$swappiness&quot; -gt 1 ];then  sed -i &#x27;s/vm.swappiness=&#x27;$swappiness&#x27;/vm.swappiness=1/g&#x27; /etc/sysctl.confelif [ ! -n &quot;$swappiness&quot; ];then  echo &quot;vm.swappiness=1&quot; &gt;&gt; /etc/sysctl.confelse  echo &quot;swappiness=1,Don&#x27;t need to modify&quot;fi# 设置 THPcp /sys/kernel/mm/transparent_hugepage/enabled /tmp/THP_enabled.&quot;$datetime&quot;cp /sys/kernel/mm/transparent_hugepage/defrag /tmp/THP_defrag.&quot;$datetime&quot;cp /etc/rc.d/rc.local /tmp/rc.local.&quot;$datetime&quot;echo &quot;never&quot; &gt; /sys/kernel/mm/transparent_hugepage/enabledecho &quot;never&quot; &gt; /sys/kernel/mm/transparent_hugepage/defragthp_enabled=`grep &quot;transparent_hugepage&quot; /etc/rc.d/rc.local|grep &quot;enabled&quot;`thp_defrag=`grep &quot;transparent_hugepage&quot; /etc/rc.d/rc.local|grep &quot;defrag&quot;`if [ ! -n &quot;$thp_enabled&quot; ];then  echo &#x27;echo &quot;never&quot; &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; &gt;&gt; /etc/rc.d/rc.localfiif [ ! -n &quot;$thp_defrag&quot; ];then  echo &#x27;echo &quot;never&quot; &gt; /sys/kernel/mm/transparent_hugepage/defrag&#x27; &gt;&gt; /etc/rc.d/rc.localfichmod +x /etc/rc.d/rc.local</span></span></span><br></pre></td></tr></table></figure><p><strong>执行批量操作命令</strong></p><p>批量执行shell文件：</p><p>注意：all 是分组，对应配置/etc/ansible/hosts配置里面的[all]内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m script -a ./check_env.sh</span><br></pre></td></tr></table></figure><h3 id="2-8安装mariadb数据库"><a href="#2-8安装mariadb数据库" class="headerlink" title="2.8安装mariadb数据库"></a>2.8安装mariadb数据库</h3><p><strong>1.安装MariaDB</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-31-13-38 ~]# yum -y install mariadb[root@ip-172-31-13-38 ~]# pyyum -y install mariadb-server</span><br></pre></td></tr></table></figure><p><strong>2.启动并配置MariaDB</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-31-13-38 ~]# systemctl start mariadb[root@ip-172-31-13-38 ~]# systemctl enable mariadbCreated symlink from /etc/systemd/system/multi-user.target.wants/mariadb.service to /usr/lib/systemd/system/mariadb.service.[root@ip-172-31-13-38 ~]# /usr/bin/mysql_secure_installationNOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!In order to log into MariaDB to secure it, we&#x27;ll need the currentpassword for the root user.  If you&#x27;ve just installed MariaDB, andyou haven&#x27;t set the root password yet, the password will be blank,so you should just press enter here.Enter current password for root (enter for none): 输入密码OK, successfully used password, moving on...Setting the root password ensures that nobody can log into the MariaDBroot user without the proper authorisation.Set root password? [Y/n] YNew password:Re-enter new password:Password updated successfully!Reloading privilege tables.. ... Success!By default, a MariaDB installation has an anonymous user, allowing anyoneto log into MariaDB without having to have a user account created forthem.  This is intended only for testing, and to make the installationgo a bit smoother.  You should remove them before moving into aproduction environment.Remove anonymous users? [Y/n] Y ... Success!Normally, root should only be allowed to connect from &#x27;localhost&#x27;.  Thisensures that someone cannot guess at the root password from the network.Disallow root login remotely? [Y/n] n ... skipping.By default, MariaDB comes with a database named &#x27;test&#x27; that anyone canaccess.  This is also intended only for testing, and should be removedbefore moving into a production environment.Remove test database and access to it? [Y/n] Y - Dropping test database...   ... Success! - Removing privileges on test database...   ... Success!Reloading the privilege tables will ensure that all changes made so farwill take effect immediately.Reload privilege tables now? [Y/n] Y ... Success!Cleaning up...All done!  If you&#x27;ve completed all of the above steps, your MariaDBinstallation should now be secure.Thanks for using MariaDB!</span><br></pre></td></tr></table></figure><p><strong>3.权限配置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -h localhost -p </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;12345678&#x27;  </span><br></pre></td></tr></table></figure><p>这里的123456为你给新增权限用户设置的密码，%代表所有主机，也可以具体到你的主机ip地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;flush privileges;</span><br></pre></td></tr></table></figure><h3 id="2-9建立组件服务需要的数据表"><a href="#2-9建立组件服务需要的数据表" class="headerlink" title="2.9建立组件服务需要的数据表"></a>2.9建立组件服务需要的数据表</h3><p><strong>登录mysql</strong></p><p>或者直接通过navicat 工具远程操作也可以，方便些</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -h localhost -p </span><br></pre></td></tr></table></figure><p><strong>执行脚本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS hbd_manage DEFAULT CHARSET utf8 COLLATE utf8_general_ci;CREATE DATABASE IF NOT EXISTS dolphinscheduler DEFAULT CHARSET utf8 COLLATE utf8_general_ci;create database metastore default character set utf8;CREATE USER &#x27;ds&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;;GRANT ALL PRIVILEGES ON dolphinscheduler . *  TO &#x27;ds&#x27;@&#x27;%&#x27;;FLUSH PRIVILEGES;create database health_metastore default character set utf8;create database health_cm default character set utf8;create database health_hue default character set utf8;create database health_sentry default character set utf8;create database health_oozie default character set utf8;create database health_am default character set utf8;create database health_rm default character set utf8;create database health_nav_ms default character set utf8;create database health_nav_as default character set utf8;</span><br></pre></td></tr></table></figure><h3 id="2-10安装JDBC驱动"><a href="#2-10安装JDBC驱动" class="headerlink" title="2.10安装JDBC驱动"></a>2.10安装JDBC驱动</h3><p><strong>上传mysql-connector-java-5.1.34.jar到服务器</strong></p><p><strong>创建软连接</strong></p><p><strong>所有节点都需要做统一操作</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/share/java/cp mysql-connector-java-5.1.34.jar /usr/share/java/chmod 777 /usr/share/java/mysql-connector-java-5.1.34.jarln -s /usr/share/java/mysql-connector-java-5.1.34.jar /usr/share/java/mysql-connector-java.jar</span><br></pre></td></tr></table></figure><p>或者直接改名</p><p>mysql-connector-java.jar</p><h2 id="3-CM安装"><a href="#3-CM安装" class="headerlink" title="3.CM安装"></a>3.CM安装</h2><h3 id="3-1配置cm-repo源"><a href="#3-1配置cm-repo源" class="headerlink" title="3.1配置cm repo源"></a>3.1配置cm repo源</h3><p><strong>把cm6.3.1和cdh6.3.2文件夹拷贝到httpd服务器上</strong></p><p>注意：这里的服务器是FreeIPA的服务端，因为FreeIPA的服务端已经安装了httpd</p><p>上传至：**/var/www/html**  目录</p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-16-061626.png" alt="image-20201216141626348"></p><p><strong>创建repo</strong></p><p>安装create repo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install createrepo</span><br></pre></td></tr></table></figure><p>在cm6.3.1文件夹里面执行，cdh6.3.2不需要此操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createrepo .</span><br></pre></td></tr></table></figure><p><strong>制作cm的repo源</strong></p><p>创建cm.repo文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/yum.repos.d/cm.repo</span><br></pre></td></tr></table></figure><p>cm.repo配置内容 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[cm_repo]name = cm_repobaseurl = http://19.50.65.66/cm6.3.1enabled = 1gpgcheck = 0</span><br></pre></td></tr></table></figure><p>把cm.repo 上传到其他节点服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh scp_do_all.sh node.list /etc/yum.repos.d/cm.repo /etc/yum.repos.d/</span><br></pre></td></tr></table></figure><p>查看当前可用的源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum repolist</span><br></pre></td></tr></table></figure><p>清除缓存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><h3 id="3-2安装JDK"><a href="#3-2安装JDK" class="headerlink" title="3.2安装JDK"></a><strong>3.2安装JDK</strong></h3><p><strong>批量安装命令，安装cm自带的jdk</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ssh_do_all.sh node.list yum -y install oracle-j2sdk1.8-1.8.0+update181-1.x86_64</span><br></pre></td></tr></table></figure><p><strong>Jdk环境变量配置</strong></p><p>执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>配置内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_181-clouderaexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><p>复制到其他服务节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh scp_do_all.sh node.list /etc/profile /etc/</span><br></pre></td></tr></table></figure><p>重新加载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profilesh ssh_do_all.sh node.list source /etc/profile</span><br></pre></td></tr></table></figure><p><strong>卸载旧版jdk</strong></p><p>确定JDK的版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep jdkrpm -qa | grep gcj</span><br></pre></td></tr></table></figure><p>查看的结果是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libgcj-4.1.2-42.el5 java-1.4.2-gcj-compat-1.4.2.0-40jpp.115 java-1.8.0-openjdk-headless-1.8.0.242.b08-0.el7_7.x86_64</span><br></pre></td></tr></table></figure><p>2.然后卸载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y remove java-1.8.0-openjdk-headless-1.8.0.242.b08-0.el7_7.x86_64</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ssh_do_all.sh node.list yum -y remove java-1.8.0-openjdk-headless-1.8.0.242.b08-0.el7_7.x86_64</span><br></pre></td></tr></table></figure><p>如果这种方法不行，可以使用如下的方法卸载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1）卸载系统自带的jdk版本：    查看自带的jdk：    #rpm -qa|grep gcj    可能看到如下类似的信息：    libgcj-4.1.2-44.el5    java-1.4.2-gcj-compat-1.4.2.0-40jpp.115    使用rpm -e --nodeps 命令删除上面查找的内容：    #rpm -e –nodeps java-1.4.2-gcj-compat-1.4.2.0-40jpp.115 2）卸载rpm安装的jkd版本    查看安装的jdk：    #rpm -qa|grep jdk    可能看到如下类似的信息：    jdk-1.6.0_22-fcs    卸载：    #rpm -e --nodeps jdk-1.6.0_22-fcs    3）找到jdk安装目录的_uninst子目录·在shell终端执行命令./uninstall.sh即可卸载jdk</span><br></pre></td></tr></table></figure><h3 id="3-2安装Cloudera-Manager"><a href="#3-2安装Cloudera-Manager" class="headerlink" title="3.2安装Cloudera Manager"></a>3.2安装Cloudera Manager</h3><h4 id="3-3-1Cloudera-Manager-Server安装"><a href="#3-3-1Cloudera-Manager-Server安装" class="headerlink" title="3.3.1Cloudera Manager Server安装"></a>3.3.1Cloudera Manager Server安装</h4><p><strong>通过yum安装Cloudera Manager Server</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install cloudera-manager-server</span><br></pre></td></tr></table></figure><p><strong>初始化数据库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/cloudera/cm/schema/scm_prepare_database.sh -h192.168.18.188 --scm-host 192.168.18.188  mysql cdh_cm root 12345678</span><br></pre></td></tr></table></figure><p>启动CM server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start cloudera-scm-serversystemctl status cloudera-scm-serversystemctl stop cloudera-scm-server#开机启动systemctl enablecloudera-scm-server</span><br></pre></td></tr></table></figure><h4 id="3-3-2Cloudera-Manager-Agent安装"><a href="#3-3-2Cloudera-Manager-Agent安装" class="headerlink" title="3.3.2Cloudera Manager Agent安装"></a>3.3.2Cloudera Manager Agent安装</h4><p>注意：此步骤可以忽略，让cm管理平台自动安装，所有节点都要安装</p><p><strong>通过yum安装Cloudera Manager Agent</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install cloudera-manager-agent</span><br></pre></td></tr></table></figure><p>启动CM agent</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start cloudera-scm-agentsystemctl status cloudera-scm-agentsystemctl stop cloudera-scm-agent#开机启动systemctl enablecloudera-scm-agent</span><br></pre></td></tr></table></figure><h3 id="3-4CDH安装"><a href="#3-4CDH安装" class="headerlink" title="3.4CDH安装"></a>3.4CDH安装</h3><h4 id="3-4-1CDH集群安装向导"><a href="#3-4-1CDH集群安装向导" class="headerlink" title="3.4.1CDH集群安装向导"></a>3.4.1CDH集群安装向导</h4><ol><li>admin/admin登录到CM</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-104108.png" alt="image-20201218184108146"></p><ol start="2"><li>同意license协议，点击继续</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-104142.png" alt="image-20201218184142222"> </p><ol start="3"><li>选择60试用，点击继续</li></ol><p>或者直接选择免费开源版</p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-104211.png" alt="image-20201218184210795"> </p><ol start="4"><li><p>点击“继续”systemctl restart cloudera-scm-agent</p></li><li><p>点击“继续”，输入集群名称，可以使用默认的“Cluster 1”。<img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-104617.png" alt="image-20201218184617448"></p></li><li><p>输入主机IP或者名称，点击搜索找到主机后点击继续</p></li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-105241.png" alt="image-20201218185241734"> </p><ol start="7"><li>选择自定义存储库，输入cm的http地址</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-105737.png" alt="image-20201218185736690"></p><p>​    “CDH and other software”中选择“使用 Parcel (建议)”，点击“ 更多选项”，点击“-”删除其它所有地址，输入<a href="http://172.31.13.38/cdh6.3%EF%BC%8C%E7%82%B9%E5%87%BB%E2%80%9C%E4%BF%9D%E5%AD%98%E6%9B%B4%E6%94%B9%E2%80%9D">http://172.31.13.38/cdh6.3，点击“保存更改”</a></p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-105802.png" alt="image-20201218185802276"></p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-105701.png" alt="image-20201218185701280"></p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-105824.png" alt="image-20201218185823920"> </p><ol start="8"><li>点击“继续”，进入下一步安装jdk</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-105844.png" alt="image-20201218185843668"> </p><ol start="9"><li>点击“继续”，进入下一步配置ssh账号密码</li></ol><p>相同密码：</p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-110046.png" alt="image-20201218190045292"></p><p>公钥：</p><p>把主节点的私钥上传到上面</p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-110016.png" alt="image-20201218190015817"> </p><ol start="10"><li>点击“继续”，进入下一步，安装Cloudera Manager相关到各个节点</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-111631.png" alt="image-20201218191631172"></p><p>等待Agent安装完毕后，自动跳转到下一步开始分发Parcel</p><ol start="11"><li>点击“继续”，进入下一步安装cdh到各个节点</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-111919.png" alt="image-20201218191918499">  </p><ol start="12"><li>点击Inspect Network Performance和Inspect Hosts，检查主机</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-112217.png" alt="image-20201218192216561"></p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-112804.png" alt="image-20201218192803823"></p><p>如果有错误或者黄色警告，查看“显示检查器结果”，并逐项解决，然后“重新运行”检查，直到所有的检查都通过，否则没办法点击继续下一步。</p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-16-105311.jpg" alt="img"> </p><h4 id="3-4-2集群设置安装向导"><a href="#3-4-2集群设置安装向导" class="headerlink" title="3.4.2集群设置安装向导"></a>3.4.2集群设置安装向导</h4><ol><li>选择需要安装的服务，根据需要选择，这里随便选择Data Warehouse，也可以自定义服务</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-112842.png" alt="image-20201218192842308"> </p><ol start="2"><li>点击“继续”，进入集群角色分配，一台机器作为管理节点，另外三台机器作为DataNode</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-113312.png" alt="image-20201218193311827"> </p><p> <img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-113334.png" alt="image-20201218193333666"> </p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-113356.png" alt="image-20201218193355609"> </p><p>注意：Activity Monitor和Telemetry Publisher不用选择任何主机，留空，即不安装，因为用不到。</p><ol start="3"><li>点击“继续”，进入下一步，测试数据库连接 </li></ol><p> <img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-113700.png" alt="image-20201218193700316"></p><ol start="4"><li>测试成功，点击“继续”，进入目录设置，此处使用默认默认目录，根据实际情况进行目录修改</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-113835.png" alt="image-20201218193835544"> </p><p> <img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-113856.png" alt="image-20201218193856136"></p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-113929.png" alt="image-20201218193928980"></p><ol start="5"><li>点击“继续”，进入各个服务启动</li></ol><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-114020.png" alt="image-20201218194019588"></p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-114520.png" alt="image-20201218194519450"> </p><ol start="6"><li>安装成功后进入home管理界面</li></ol><p> <img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-114547.png" alt="image-20201218194546958"></p><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-114611.png" alt="image-20201218194611270"> </p><h4 id="3-4-3组件版本检查"><a href="#3-4-3组件版本检查" class="headerlink" title="3.4.3组件版本检查"></a>3.4.3组件版本检查</h4><p><img src="https://allen-bigdata-1252101235.cos.ap-guangzhou.myqcloud.com/2020-12-18-130202.png" alt="image-20201218210201486"> </p><p>可以看到Hadoop3.0，Flume1.9，HBase2.1，Hive2.1.1，Spark2.4，Hue4.2.0，Impala3.2，Kafka2.2.1，Kudu1.0，Oozie5.1，Pig0.17，Senty2.1，Solr7.4，Sqoop1.4.7，Zookeeper3.4.5等。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CDH6-3-2-安装&quot;&gt;&lt;a href=&quot;#CDH6-3-2-安装&quot; class=&quot;headerlink&quot; title=&quot;CDH6.3.2 安装&quot;&gt;&lt;/a&gt;CDH6.3.2 安装&lt;/h1&gt;&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;1-安装说明&quot;&gt;&lt;a href=</summary>
      
    
    
    
    
    <category term="大数据" scheme="http://liujun1997.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>myFirstBlog</title>
    <link href="http://liujun1997.github.io/2021/08/06/myFirstBlog/"/>
    <id>http://liujun1997.github.io/2021/08/06/myFirstBlog/</id>
    <published>2021-08-06T14:05:59.000Z</published>
    <updated>2021-08-06T15:26:10.968Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-这是"><a href="#1-这是" class="headerlink" title="1.这是"></a>1.这是</h3><h4 id="1-1-ffa"><a href="#1-1-ffa" class="headerlink" title="1.1 ffa"></a>1.1 ffa</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd .. </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-这是&quot;&gt;&lt;a href=&quot;#1-这是&quot; class=&quot;headerlink&quot; title=&quot;1.这是&quot;&gt;&lt;/a&gt;1.这是&lt;/h3&gt;&lt;h4 id=&quot;1-1-ffa&quot;&gt;&lt;a href=&quot;#1-1-ffa&quot; class=&quot;headerlink&quot; title=&quot;1.1</summary>
      
    
    
    
    
    <category term="小记" scheme="http://liujun1997.github.io/tags/%E5%B0%8F%E8%AE%B0/"/>
    
  </entry>
  
</feed>
